package com.example.wfc_data.database.di

import com.example.wfc_data.database.caching.IMemoryCache
import com.example.wfc_data.database.caching.MemoryCache
import com.example.wfc_data.database.channles.repositories.ChannelsRepository
import com.example.wfc_data.database.channles.repositories.IChannelsRepository
import com.example.wfc_data.database.providers.repositories.IProvidersRepository
import com.example.wfc_data.database.providers.repositories.ProvidersRepository
import com.example.wfc_data.database.settings.repositories.ISettingsRepository
import com.example.wfc_data.database.settings.repositories.SettingsRepository
import dagger.Binds
import dagger.Module
import dagger.hilt.InstallIn
import dagger.hilt.components.SingletonComponent
import javax.inject.Singleton

@Module
@InstallIn(SingletonComponent::class)
abstract class DataWithInterfacesModule {
    @Binds
    @Singleton
    abstract fun bindMemoryCache(memoryCache: MemoryCache): IMemoryCache

    @Binds
    abstract fun bindSettingRepository(settingsRepository: SettingsRepository): ISettingsRepository

    @Binds
    abstract fun bindProvidersRepository(providersRepository: ProvidersRepository): IProvidersRepository

    @Binds
    abstract fun bindChannelsRepository(channelsRepository: ChannelsRepository): IChannelsRepository
}