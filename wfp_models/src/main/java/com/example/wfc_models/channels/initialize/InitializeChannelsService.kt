package com.example.wfc_models.channels.initialize

import com.example.wfc_data.database.WFCDatabase
import com.example.wfc_data.database.entities.ChannelEntity
import com.example.wfc_models.dependencies.text_dependencies.ITextDependencyService
import com.example.wfc_models.dependencies.text_dependencies.data_models.TextDependencyType
import com.example.wfc_models.exceptions.CriticalBusinessException
import com.google.gson.GsonBuilder
import kotlinx.coroutines.coroutineScope
import javax.inject.Inject

class InitializeChannelsService @Inject constructor(
    _dataBase: WFCDatabase,
    private val _textDependencyModel: ITextDependencyService
): IInitializeChannelsService {
    private val _channelDao = _dataBase.channelDao()
    private val _gsonBuilder = GsonBuilder()

    override suspend fun initialize() = coroutineScope {
        val channelsCount = _channelDao.count()

        if(channelsCount > 0) return@coroutineScope

        val gson = _gsonBuilder.create()
        val channelsJson = _textDependencyModel.readTextDependency(TextDependencyType.CHANNELS)

        val channelListType = Array<ChannelEntity>::class.java

        val channels = gson.fromJson(channelsJson, channelListType)
            ?: throw CriticalBusinessException("Channels in channels.json not found")

       _channelDao.insert(*channels)
    }
}