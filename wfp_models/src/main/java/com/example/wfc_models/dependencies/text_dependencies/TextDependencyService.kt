package com.example.wfc_models.dependencies.text_dependencies

import android.content.Context
import com.example.wfc_models.dependencies.text_dependencies.dtos.TextDependencyType
import dagger.hilt.android.qualifiers.ApplicationContext
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.async
import kotlinx.coroutines.coroutineScope
import javax.inject.Inject

class TextDependencyService  @Inject constructor(
    @ApplicationContext private val _context: Context
) : ITextDependencyService {
    override suspend fun readTextDependency(textDependencyType: TextDependencyType): String = coroutineScope {
        val textDependenciesAssetsFolderPath = "text_dependencies"

        val dependencyPath = "${textDependenciesAssetsFolderPath}/${textDependencyType.value}"

        val readDependencyJob = async(Dispatchers.IO) {
            _context.assets
                .open(dependencyPath)
                .bufferedReader()
                .use {
                    it.readText()
                }
        }

        return@coroutineScope readDependencyJob.await()
    }
}