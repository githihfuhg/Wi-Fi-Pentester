package com.example.wifi_pentester.ui.main

import android.os.Bundle
import android.view.View
import androidx.appcompat.app.AppCompatActivity
import androidx.lifecycle.lifecycleScope
import androidx.viewpager2.widget.ViewPager2
import com.example.wfc_models.channels.initialize.IChannelsInitializeService
import com.example.wfc_models.providers.IProviderService
import com.example.wfc_models.settings.IInitSettingsService
import com.example.wifi_pentester.R
import com.example.wifi_pentester.ui.channels.ChannelScannerFragment
import com.example.wifi_pentester.ui.menu.MenuFragment
import com.example.wifi_pentester.ui.wifi.WifiScannerFragment
import com.example.wifi_pentester.utils.handlers.ExceptionHandler
import com.gauravk.bubblenavigation.BubbleNavigationConstraintView
import dagger.hilt.android.AndroidEntryPoint
import kotlinx.coroutines.*
import javax.inject.Inject
import kotlin.math.abs

@AndroidEntryPoint
class MainActivity : AppCompatActivity() {
    @Inject lateinit var initSettingsModel: IInitSettingsService
    @Inject lateinit var channelModel: IChannelsInitializeService
    @Inject lateinit var providerModel: IProviderService
    @Inject lateinit var channelFragment: ChannelScannerFragment
    @Inject lateinit var wifiScannerFragment: WifiScannerFragment
    @Inject lateinit var menuFragment: MenuFragment
    @Inject lateinit var exceptionHandler: ExceptionHandler

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        exceptionHandler.register()

        lifecycleScope.launch {
            val initJobs = listOf(initSettingsModel, channelModel, providerModel).map {
                launch { it.initialize()  }
            }
            initJobs.joinAll()
            initMainTabs()
        }
    }

    private fun initMainTabs(){
        val bubbleNavigation = this.findViewById<BubbleNavigationConstraintView>(R.id.top_navigation_constraint)

        val fragments = listOf(wifiScannerFragment, channelFragment, menuFragment)

        val slidePagerAdapter = MainTabAdapter(this.supportFragmentManager, this.lifecycle, fragments)
        val viewPager = this.findViewById<ViewPager2>(R.id.fragment_container)
        with(viewPager) {
            adapter = slidePagerAdapter
            registerOnPageChangeCallback(object : ViewPager2.OnPageChangeCallback() {
                override fun onPageSelected(position: Int) {
                    super.onPageSelected(position)
                    bubbleNavigation.setCurrentActiveItem(position)
                }
            })
        }
        bubbleNavigation.setNavigationChangeListener { view: View?, position: Int -> viewPager.setCurrentItem(position, true) }
        viewPager.setPageTransformer { view: View, pos: Float ->
            val opacity = abs(abs(pos) - 1)
            view.alpha = opacity
        }
    }
}