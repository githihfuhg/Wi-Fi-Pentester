package com.example.wifi_pentester.ui.wifi.dialogs

import android.app.Dialog
import android.os.Bundle
import androidx.databinding.DataBindingUtil
import androidx.fragment.app.DialogFragment
import androidx.fragment.app.viewModels
import com.example.wfc_models.wifi.scanners.data_models.Wifi
import com.example.wifi_pentester.R
import com.example.wifi_pentester.databinding.WifiConnectionDialogBinding
import com.example.wifi_pentester.view_models.wifis.dialogs.WifiConnectionDialogViewModel
import com.google.android.material.dialog.MaterialAlertDialogBuilder

enum class TypeDialog {
    Password, Wps
}

class ConnectUsPasswordDialog : DialogFragment() {
    private val wifiKey = this.javaClass.name
    private val typeDialogKey = TypeDialog::class.java.name

    override fun onCreateDialog(savedInstanceState: Bundle?): Dialog {
        val wifi  = requireArguments().getParcelable<Wifi>(wifiKey)

        val typeDialog = TypeDialog.valueOf(requireArguments().getString(typeDialogKey)!!)

        val dialogBinding: WifiConnectionDialogBinding = DataBindingUtil.inflate(layoutInflater, R.layout.wifi_connection_dialog, null, false)
        dialogBinding.wifi = wifi
        dialogBinding.hint = typeDialog.toString()
        val dialogViewModel by viewModels<WifiConnectionDialogViewModel>()
        dialogBinding.dialogViewModel = dialogViewModel
        val dialog = MaterialAlertDialogBuilder(requireContext(), R.style.ThemeOverlay_App_MaterialAlertDialog).setView(dialogBinding.root).create()
        dialogBinding.connectionDialogCancelButton.setOnClickListener { dialog.cancel() }

        return dialog
    }

    companion object {
        fun newInstance(wifi: Wifi, typeDialog: TypeDialog): ConnectUsPasswordDialog {
            val fragment = ConnectUsPasswordDialog()
            val bundle = Bundle()
            bundle.putParcelable(fragment.wifiKey, wifi)
            bundle.putString(fragment.typeDialogKey, typeDialog.toString())
            fragment.arguments = bundle
            return fragment
        }
    }
}