package com.example.wifi_pentester.ui.password_recovery.adapters

import android.view.LayoutInflater
import android.view.ViewGroup
import androidx.recyclerview.widget.DiffUtil
import androidx.recyclerview.widget.ListAdapter
import androidx.recyclerview.widget.RecyclerView
import com.example.wfc_models.recovered_wifis.dtos.RecoveredWifi
import com.example.wifi_pentester.databinding.PasswordListItemBinding
import com.example.wifi_pentester.ui.password_recovery.adapters.RecoveredWiFiListAdapter.RecoveredWifiHolder
import javax.inject.Inject

class RecoveredWiFiListAdapter @Inject constructor() : ListAdapter<RecoveredWifi, RecoveredWifiHolder> (DiffCallback()) {
    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecoveredWifiHolder {
        val layoutInflater = LayoutInflater.from(parent.context)
        val itemBinding = PasswordListItemBinding.inflate(layoutInflater, parent, false)
        return RecoveredWifiHolder(itemBinding)
    }

    override fun onBindViewHolder(holder: RecoveredWifiHolder, position: Int) {
        val currentPassword = getItem(position)
        holder.bind(currentPassword)
    }

    inner class RecoveredWifiHolder(var binding: PasswordListItemBinding) : RecyclerView.ViewHolder(binding.root) {
        fun bind(recoveredWifi: RecoveredWifi) {
            binding.recoveredWiFi = recoveredWifi
            binding.executePendingBindings()
        }
    }

    private class DiffCallback : DiffUtil.ItemCallback<RecoveredWifi>() {
        override fun areItemsTheSame(oldItem: RecoveredWifi, newItem: RecoveredWifi) = oldItem == newItem
        override fun areContentsTheSame(oldItem: RecoveredWifi, newItem: RecoveredWifi) = oldItem == newItem
    }
}