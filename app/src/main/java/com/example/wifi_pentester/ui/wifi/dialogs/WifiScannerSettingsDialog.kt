package com.example.wifi_pentester.ui.wifi.dialogs

import android.app.Dialog
import android.os.Bundle
import androidx.databinding.DataBindingUtil
import androidx.fragment.app.viewModels
import androidx.lifecycle.lifecycleScope
import com.example.wifi_pentester.R
import com.example.wifi_pentester.databinding.WifiScanSettingsDialogBinding
import com.example.wifi_pentester.utils.diallogs.DialogBase
import com.example.wifi_pentester.view_models.settings.WifiScannerSettingsViewModel
import dagger.hilt.android.AndroidEntryPoint
import kotlinx.coroutines.launch
import javax.inject.Inject

@AndroidEntryPoint
class WifiScannerSettingsDialog @Inject constructor() : DialogBase() {
    override val dialogTag: String = this.javaClass.name

    private val  _viewModel: WifiScannerSettingsViewModel by viewModels()

    override fun onCreateDialog(savedInstanceState: Bundle?): Dialog {
        val settingsDialogBinding: WifiScanSettingsDialogBinding =
            DataBindingUtil.inflate(layoutInflater, R.layout.wifi_scan_settings_dialog, null, false)

        settingsDialogBinding.viewModel = _viewModel
        settingsDialogBinding.lifecycleOwner = this

        val dialog: Dialog = onCreateDialog(settingsDialogBinding.root)

        lifecycleScope.launch { _viewModel.synchronizeStateBySettings() }

        settingsDialogBinding.settingsDialogOkButton.setOnClickListener {
            lifecycleScope.launch {
                _viewModel.saveSettings()
                super.onDismiss(dialog)
            }
        }

        settingsDialogBinding.settingsDialogResetButton.setOnClickListener {
            lifecycleScope.launch {
                _viewModel.resetSettings()
            }
        }

        return dialog
    }
}