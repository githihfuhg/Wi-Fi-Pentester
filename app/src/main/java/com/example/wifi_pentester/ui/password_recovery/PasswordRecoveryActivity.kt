package com.example.wifi_pentester.ui.password_recovery
import android.os.Bundle
import androidx.activity.viewModels
import androidx.appcompat.app.AppCompatActivity
import androidx.lifecycle.lifecycleScope
import com.example.wifi_pentester.databinding.ActivityPasswordRecoveryBinding
import com.example.wifi_pentester.ui.password_recovery.adapters.RecoveredWiFiListAdapter
import com.example.wifi_pentester.view_models.password_recovery.PasswordListViewModel
import dagger.hilt.android.AndroidEntryPoint
import kotlinx.coroutines.flow.collect
import kotlinx.coroutines.launch
import javax.inject.Inject

@AndroidEntryPoint
class PasswordRecoveryActivity : AppCompatActivity() {
    private val passwordListViewModel: PasswordListViewModel by viewModels()
    private lateinit var binding: ActivityPasswordRecoveryBinding

    @Inject lateinit var recoveredWiFiListAdapter: RecoveredWiFiListAdapter

    override fun onResume() {
        super.onResume()
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        binding = ActivityPasswordRecoveryBinding.inflate(layoutInflater)
        setContentView(binding.root)

        binding.adapter = recoveredWiFiListAdapter
        binding.viewModel = passwordListViewModel
        binding.lifecycleOwner = this

        lifecycleScope.launch() {
            passwordListViewModel.recoveredWiFis.collect { x ->
                binding.adapter?.submitList(x)
                binding.viewModel = passwordListViewModel
            }
        }
    }
}