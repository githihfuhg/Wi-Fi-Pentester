package com.example.wifi_pentester.ui.theme

import android.content.res.Configuration
import android.content.res.Configuration.UI_MODE_NIGHT_YES
import android.os.Build
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.runtime.ReadOnlyComposable
import androidx.compose.ui.platform.LocalContext

private val DarkColorScheme = darkColorScheme()
private val LightColorScheme = lightColorScheme()

fun supportsDynamic() : Boolean = Build.VERSION.SDK_INT >= Build.VERSION_CODES.S

@Composable
@ReadOnlyComposable
fun isSystemInDarkTheme() : Boolean {
    val context = LocalContext.current
    return when (context.resources?.configuration?.uiMode?.and(Configuration.UI_MODE_NIGHT_MASK)) {
        UI_MODE_NIGHT_YES -> true
        else -> false
    }
}

@Composable
fun AppTheme(content: @Composable() () -> Unit) {
    val inDarkMode: Boolean = isSystemInDarkTheme()

    val colors = if (supportsDynamic()) {
        val context = LocalContext.current
        if (inDarkMode) dynamicDarkColorScheme(context) else dynamicLightColorScheme(context)
    } else {
        if (inDarkMode) DarkColorScheme else LightColorScheme
    }

    MaterialTheme(
        colorScheme = colors,
        content = content
    )
}