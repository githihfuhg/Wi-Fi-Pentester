package com.example.wifi_pentester.view_models.wifi_pentesting

import android.app.Application
import androidx.databinding.Bindable
import androidx.databinding.ObservableField
import com.example.wfc_models.wifi.scanners.dtos.Wifi
import com.example.wifi_pentester.utils.pixieDustAttack.PixieDust
import com.example.wifi_pentester.utils.pixieDustAttack.PixieDustStatus
import com.example.wifi_pentester.utils.pixieDustAttack.WpsConnectResult
import com.example.wifi_pentester.view_models.ObservableViewModel

class CrackWifiViewModel(application: Application, wifi: Wifi) : ObservableViewModel(application) {
    @JvmField
    @Bindable
    val consoleMessage = ObservableField("")
    private val pixieDust: PixieDust = PixieDust(getApplication(), WpsConnectResult(wifi.name, wifi.mac, 12345678))

    override fun onCleared() {
        pixieDust.close()
    }

    init {
        pixieDust.setMessageListener { message: String ->
            val newMessage = consoleMessage.get().toString() + message
            consoleMessage.set(newMessage)
        }
        pixieDust.setResultListener { message: WpsConnectResult -> message }
        pixieDust.setStatusListener { s: PixieDustStatus -> s }
        pixieDust.runAttach()
    }
}